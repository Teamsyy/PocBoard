services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: pocboard-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: junk_journal
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/01-init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d junk_journal"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    networks:
      - pocboard-network

  # Go Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: pocboard-backend
    restart: unless-stopped
    environment:
      # Database Configuration
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=junk_journal
      # Server Configuration
      - PORT=8080
      - GO_ENV=development
      # CORS Configuration
      - FRONTEND_URL=http://localhost:3000
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
      - backend_cache:/go/pkg/mod
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:8080/health"] 
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks:
      - pocboard-network
    develop:
      watch:
        - action: rebuild
          path: ./backend
          ignore:
            - ./backend/uploads/
            - ./backend/tmp/

  # Vue.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: pocboard-frontend
    restart: unless-stopped
    environment:
      # API Configuration
      - VITE_API_URL=http://localhost:8080
      - VITE_APP_TITLE=PocBoard
      # Development Configuration
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - frontend_cache:/app/.vite
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:3000"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - pocboard-network
    develop:
      watch:
        - action: sync
          path: ./frontend/src
          target: /app/src
        - action: rebuild
          path: ./frontend/package.json

  # Optional: Database Admin Tool
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pocboard-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pocboard.local
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8081:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - pocboard-network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  backend_cache:
    driver: local
  frontend_cache:
    driver: local

networks:
  pocboard-network:
    driver: bridge
    name: pocboard-network